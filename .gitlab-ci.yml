windows-amd64-ltsc2022:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-windows-amd64:ltsc2022
  when: manual
  tags:
    - windows

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -G "Visual Studio 17 2022" -DCMAKE_GENERATOR_PLATFORM=x64
    - cmake --build . --config Release --target ALL_BUILD
    - cmake --build . --config Release --target RUN_TESTS
    - cmake --build . --config Release --target PACKAGE

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.msi
      - ./*.zip
      - ./*.sha256

build-ubuntu.18.04-x64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:18.04
  when: manual

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=ubuntu.18.04-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.deb
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-ubuntu.20.04-x64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:20.04
  when: manual

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=ubuntu.20.04-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.deb
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-ubuntu.22.04-x64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:22.04
  when: manual

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=ubuntu.22.04-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.deb
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

centOS-7-amd64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-centos-amd64:latest
  when: manual
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake .
    - make
    - make test
    - make package
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256

almalinux-8-amd64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-almalinux-amd64:8
  when: manual
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=rhel.8-x64
    - make
    - make test
    - make package
    - dotnet nuget pack nuget/vanillapdf.runtime.nuspec
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

almalinux-8-arm64v8:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-almalinux-arm64v8:8
  when: manual
  timeout: 5 hours # The runner machine seems to be very slow
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake .
    - make
    - make test
    - make package
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256

almalinux-9-amd64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-almalinux-amd64:9
  when: manual
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake .
    - make
    - make test
    - make package
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256

nuget-deploy:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:22.04
  when: manual
  needs: []

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - 'curl --location --output ubuntu.22.04-x64.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/jurzik/vanillapdf/-/jobs/artifacts/nuget_packaging/download?job=build-ubuntu.22.04-x64"'
    - unzip ubuntu.22.04-x64.zip
    - nuget add source "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - nuget push "*.nupkg" --source gitlab

