stages:
  - test
  - deploy-staging
  - deploy-production

windows-amd64-ltsc2019:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-windows-amd64:ltsc2019
  when: manual
  tags:
    - windows

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  before_script:
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"

  script:
    - cmake . -G "Visual Studio 16 2019" -DCMAKE_GENERATOR_PLATFORM=x64 -DPLATFORM_IDENTIFIER=win-x64
    - cmake --build . --config Release --target ALL_BUILD
    - cmake --build . --config Release --target RUN_TESTS
    - cmake --build . --config Release --target PACKAGE
    - nuget pack nuget/vanillapdf.runtime.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.msi
      - ./*.zip
      - ./*.sha256
      - ./*.nupkg

build-ubuntu.18.04-x64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:18.04
  when: manual

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=ubuntu.18.04-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.deb
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-ubuntu.20.04-x64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:20.04
  when: manual

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=ubuntu.20.04-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.deb
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-ubuntu.22.04-x64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:22.04
  when: manual

  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=ubuntu.22.04-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.deb
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-centos.7-x64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-centos-amd64:latest
  when: manual
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=centos.7-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-almalinux-8-amd64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-almalinux-amd64:8
  when: manual
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=rhel.8-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-almalinux-8-arm64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-almalinux-arm64v8:8
  when: manual
  timeout: 5 hours # The runner machine seems to be very slow
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=rhel.8-arm64
    - make
    - make test
    - make package
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256

almalinux-9-amd64:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-almalinux-amd64:9
  when: manual
  
  variables:
    GIT_SUBMODULE_STRATEGY: recursive

  script:
    - cmake . -DPLATFORM_IDENTIFIER=rhel.9-x64
    - make
    - make test
    - make package
    - nuget pack nuget/vanillapdf.runtime.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.rpm
      - ./*.tar.gz
      - ./*.sha256
      - ./*.nupkg

build-vanillapdf-nuget:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:22.04
  when: manual

  script:
    - cmake . -DPLATFORM_IDENTIFIER=ubuntu.22.04-x64
    - nuget pack nuget/vanillapdf.nuspec

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./*.nupkg

build-vanillapdf-docs:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:22.04
  when: manual

  script:
    - cd doc
    - doxygen doxyfile

  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - ./doc/api

nuget-deploy-staging:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:22.04
  stage: deploy-staging
  when: manual

  script:
    - dotnet nuget add source "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet nuget push "*.nupkg" --source gitlab

nuget-deploy-production:
  image: registry.gitlab.com/jurzik/vanillapdf/vanillapdf-ubuntu-amd64:22.04
  stage: deploy-production
  when: manual

  script:
    - echo "deploying to production"
    # - dotnet nuget add source "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    # - dotnet nuget push "*.nupkg" --source gitlab
    # - FTP msi, tgz, deb, rpm, docs
