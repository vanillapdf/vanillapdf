/**
* \defgroup Documents High-level document interface
* \brief
* Classes representing document's properties.
*
* The base entity for should be \ref DocumentHandle,
* which represents the file in terms of the high-level interface.
*
* Document's pages are contained in so-called \ref CatalogHandle.
*
* These classes shall provide a root for your research.
*
* All functions in this interface shall provide semantic
* correctness for a file. Meaning that all functions
* shall behave as defined in the standard.
*
* As this task is fairly large, not all operations
* and properties are yet exposed. If you find any
* important task, that cannot be done:
* - Please let me know (<mailto:jur.zikmund@gmail.com>)
* - Try to use \ref Files to complete the task
*/

/**
* \defgroup Files Low-level file interface
* \brief
* Accessing file thourgh list of objects such as
* ArrayObjectHandle or DictionaryObjectHandle.
*
* An in-depth knowledge about PDF file format is strongly
* recommended as many functions are a direct reference
* to a PDF specification.
*
* You might want to start with \ref FileHandle,
* which is the low-level counterpart of the DocumentHandle.
*
* It's primary use is for missing or misbehaving functionality
* in the \ref Documents.
*
* This interface shall provide syntactic correctness
* for a file. However, the user is responsible for
* the semantic correctness.
*
* It allows you to create files, that are syntactically
* correct, but are \b invalid in terms of PDF document
* semantics.
*/

/**
* \defgroup CommonDataStructures Common data structures
* \ingroup Documents
* \brief
* General-purpose data structures that are built from the basic
* object types described in \ref Objects.
*
* This is a direct reference to a PDF specification,
* section 7.9, "Common Data Structures".
*/

/**
* \defgroup Fonts Fonts
* \ingroup Documents
* \brief
* Group of font related classes and functions.
*
* FontHandle represents a base class for all derived font types.
*/

/**
* \defgroup Contents Page contents
* \ingroup Documents
* \brief
* Content streams are the primary means for describing
* the appearance of pages and other graphical elements.
*
* A content stream depends on information
* contained in an associated resource dictionary.
* These two objects form a self-contained entity.
*
* This is a direct reference to a PDF specification,
* section 7.8, "Content Streams and Resources".
*/

/**
* \defgroup Objects Objects
* \ingroup Files
* \brief
* Basic object types from which a whole PDF file is composed.
*
* This is a direct reference to a PDF specification,
* section 7.3, "Objects".
*/

/**
* \defgroup Xref Cross-reference tables and streams
* \ingroup Files
* \brief
* The cross-reference table contains information that permits random
* access to indirect objects within the file so that the entire file
* need not be read to locate any particular object.
*
* Cross-reference streams provide the following advantages:
* - A more compact representation of cross-reference information
* - The ability to access compressed objects that are stored in object
*   streams (see 7.5.7, "Object Streams") and to allow new cross-reference
*   entry types to be added in the future
*
* This is a direct reference to a PDF specification,
* section 7.5.4, "Cross-Reference Table" and
* section 7.5.8, "Cross-Reference Streams".
*/

/**
* \defgroup NameConstants Name constants
* \ingroup Files
* \brief
* Often used name constant definitions.
*
* These are especially useful in conjuction with the \ref Files.
*
* It allow to search PDF contents without the need to create
* a name for every property that the PDF already defines.
*/

/**
* \defgroup Utils Utilities
* \brief
* Additional features that does not correspond directly with PDF.
*/

/**
* \defgroup Types Types
* \brief
* Defines some general-purpose types used throughout the interface.
*/

/**
* \defgroup BooleanTypes Boolean types
* \ingroup Types
* \brief
* Defines boolean type with its possible values.
*/

/**
* \defgroup ErrorTypes Error types
* \ingroup Types
* \brief
* Defines a type and ranges of possible return values from whole API.
*
* Please refer to these variables when checking for function return values
* instead of any other constants (such as 0).
*
* Whole possible range of return values is described in this module.
*/